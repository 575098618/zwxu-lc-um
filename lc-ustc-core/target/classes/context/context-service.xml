<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:c="http://www.springframework.org/schema/c"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jaxws="http://cxf.apache.org/jaxws" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://cxf.apache.org/jaxws http://cxf.apache.org/schemas/jaxws.xsd">
		
	<import resource="classpath:META-INF/spring/context-pcs-client.xml" />

	<!-- <bean id="testService" class="com.payment.lc.fundacct.service.impl.TestServiceImpl" init-method="init" /> -->
    <bean id="fundacctService" class="com.payment.lc.fundacct.service.impl.FundacctServiceImplV2" />

    <bean id="accountServiceFactory" class="com.payment.lc.fundacct.service.impl.AccountServiceFactory" />
    <bean id="fundService" class="com.payment.lc.fundacct.service.impl.FundServiceImpl" />
    <bean id="kamiService" class="com.payment.lc.fundacct.service.impl.KamiServiceImplV2" />
    <bean id="memberAcctService" class="com.payment.lc.fundacct.service.impl.MemberAcctServiceImpl" />
    <bean id="memberFundService" class="com.payment.lc.fundacct.service.impl.MemberFundServiceImpl" />
    <bean id="productManagerService" class="com.payment.lc.fundacct.product.ProductManageServiceImpl" depends-on="productionService" />
    <bean id="createFundAcctService" class="com.payment.lc.fundacct.service.impl.CreateFundAcctServiceImplV2" />
    <bean id="riskAssessmentService" class="com.payment.lc.fundacct.service.impl.RiskAssessmentServiceImpl" />
    <bean id="memberConfigStore" class="com.payment.lc.fundacct.service.impl.MemberConfigStore" />
    <bean id="getMemberIdFromMidService" class="com.payment.lc.fundacct.service.impl.GetMemberIdFromMidServiceImpl" />
    <bean id="memberIdHashStore" class="com.payment.lc.fundacct.service.impl.MemberIdHashStore" />
    <bean id="syncRiskassessmentHandller" class="com.payment.lc.fundacct.service.impl.riskassessment.SyncRiskassessmentHandller" />
    <bean id="syncRiskassessment" class="com.payment.lc.fundacct.service.impl.riskassessment.SyncRiskassessment" />
    <bean id="syncRiskassessmentHandller2" class="com.payment.lc.fundacct.service.impl.riskassessment.SyncRiskassessmentHandller2" />
    <bean id="syncRiskassessment2" class="com.payment.lc.fundacct.service.impl.riskassessment.SyncRiskassessment2" />
    <bean id="lcapitalService" class="com.payment.lc.fundacct.service.impl.lcapital.LcapitalServiceImplV2" />
    <bean id="lcapitalServiceV20" class="com.payment.lc.fundacct.service.impl.lcapital.LcapitalServiceImplV20" />
    <bean id="capitalQueryService" class="com.payment.lc.fundacct.service.impl.lcapital.CapitalQueryServiceImpl" />
	<bean id="insuranceUserInfoService" class="com.payment.lc.fundacct.service.impl.InsuranceUserInfoServiceImpl" />
    <bean id="openAcctQueryService" class="com.payment.lc.fundacct.service.impl.OpenAcctQueryServiceImpl" />
    <bean id="fundacctServiceV20" class="com.payment.lc.fundacct.service.impl.FundacctServiceV20Impl" />
	<bean id="activeCaCouponHandller" class="com.payment.lc.fundacct.service.impl.fcoupon.ActiveCaCouponHandller" />
	<bean id="frozenSerice" class="com.payment.lc.fundacct.service.impl.FrozenSericeImpl" />
	<bean id="authService" class="com.payment.lc.fundacct.service.impl.auth.DefaultAuthService" />
	
	<bean id="fundBenefitCalcService" class="com.payment.lc.fundacct.service.impl.lcapital.FundBenefitCalcService" />
	<bean id="innerMemberService" class="com.payment.lc.fundacct.service.impl.InnerMemberServiceImpl" />
	<bean id="sendUnbind2Payment" class="com.payment.lc.fundacct.service.impl.unbind2payment.SendUnbind2Payment" />
	<bean id="sendUnbind2PaymentHandler" class="com.payment.lc.fundacct.service.impl.unbind2payment.SendUnbind2PaymentHandler" />
	<bean id="fundSettingService" class="com.payment.lc.fundacct.service.impl.fcm.DefaultFundSettingService" />
	
	<bean id="lcapitalCategoryServiceAM" class="com.payment.lc.fundacct.service.impl.lcapital.LcapitalCategoryServiceAMImpl"  />
	<bean id="lcapitalCategoryServiceHQ" class="com.payment.lc.fundacct.service.impl.lcapital.LcapitalCategoryServiceHQImpl" />
	<bean id="lcapitalCategoryServiceMP" class="com.payment.lc.fundacct.service.impl.lcapital.LcapitalCategoryServiceMPImpl" />
	<bean id="lcapitalCategoryServiceFund" class="com.payment.lc.fundacct.service.impl.lcapital.LcapitalCategoryServiceFundImpl" />
	<bean id="lcapitalCategoryServiceDQ" class="com.payment.lc.fundacct.service.impl.lcapital.LcapitalCategoryServiceDQImpl" />
	<bean id="lcapitalCategoryServiceFP" class="com.payment.lc.fundacct.service.impl.lcapital.LcapitalCategoryServiceFPImpl" />
	<bean id="asyncLcapitalProcessor" class="com.payment.lc.fundacct.service.impl.lcapital.AsyncLcapitalProcessor">
		<property name="categoryServiceMap">
			<map>
				<entry key="HQB" value-ref="lcapitalCategoryServiceHQ" />
				<entry key="MP" value-ref="lcapitalCategoryServiceMP" />
				<entry key="DQB" value-ref="lcapitalCategoryServiceDQ" />
				<entry key="FP" value-ref="lcapitalCategoryServiceFP" />
				<entry key="FUND" value-ref="lcapitalCategoryServiceFund" />
				<entry key="AM" value-ref="lcapitalCategoryServiceAM" />
			</map>
		</property>
		<property name="threadPoolTaskExecutor">
			<bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
				<property name="corePoolSize" value="20" />
				<property name="maxPoolSize" value="40" />
				<property name="queueCapacity" value="200" />
				<property name="keepAliveSeconds" value="300" />
				<property name="rejectedExecutionHandler">
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
	</bean>
			
		</property>
	</bean>
	

    <bean id="fundAcctReceiver" class="com.payment.lc.fundacct.receiver.FundAcctReceiver">
        <property name="destination" value="fund.ops.openAccountNotify" />
        <property name="genericClass" value="com.payment.fcm.fss.service.facade.domain.agreement.SignResult" />
    </bean>

	<bean id="threadPoolTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="5" />
		<property name="maxPoolSize" value="20" />
		
		<property name="queueCapacity" value="200" />
			<property name="keepAliveSeconds" value="300" />
		<property name="rejectedExecutionHandler">
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
	</bean>

    <jaxws:client id="accountService"
        serviceClass="com.payment.dpm.accounting.api.AccountService" 
        address="${accountservice.url}" />

	<jaxws:client id="mfAccountService"
        serviceClass="com.payment.dpm.accounting.api.AccountService" 
        address="${accountservice.url}" />

	<jaxws:client id="tfAccountService"
        serviceClass="com.payment.dpm.accounting.api.AccountService" 
        address="${tfaccountservice.url}" />

    <jaxws:client id="agreementFacade"
        serviceClass="com.payment.fcm.fss.service.facade.api.AgreementFacade" 
        address="${agreementfacade.url}" />

    <jaxws:client id="secondQueryOrderService"
        serviceClass="com.payment.lc.userorder.query.api.SecondQueryOrderService" 
        address="${secondQueryOrderService.url}" />

	<jaxws:client id="fundQueryFacade"
        serviceClass="com.payment.fcm.fss.service.facade.api.FundQueryFacade" 
        address="${fundQueryFacade.url}" />

	<jaxws:client id="controlRequestFacade"
        serviceClass="com.payment.fcm.fss.service.facade.api.ControlRequestFacade" 
        address="${controlRequestFacade.url}" />

	<jaxws:client id="queryOrderService"
        serviceClass="com.payment.lc.userorder.query.api.QueryOrderService" 
        address="${queryOrderService.url}" />
	<jaxws:client id="vcapitalService"
        serviceClass="com.payment.lc.fcoupon.api.VcapitalService" 
        address="${vcapitalService.url}" />

	<jaxws:client id="laxinService"
        serviceClass="com.payment.lc.fcoupon.api.LaxinService" 
        address="${laxinService.url}" />

	<jaxws:client id="fundacctVcapitalService"
        serviceClass="com.payment.lc.fcoupon.api.FundacctVcapitalService" 
        address="${fundacctVcapitalService.url}" />

	<jaxws:client id="queryCapitalService"
        serviceClass="com.payment.lc.fic.api.QueryCapitalService" 
        address="${queryCapitalService.url}" />

    <jaxws:client id="activeFcouponService"
        serviceClass="com.payment.lc.fcoupon.api.ActiveFcouponService" 
        address="${activeFcouponService.url}" />

	<jaxws:client id="mpPurchaseService"
        serviceClass="com.payment.lc.ops.api.mp.MpPurchaseService" 
        address="${mpPurchaseService.url}" >
    </jaxws:client>
    
    <!--         <jaxws:properties>
        	<entry key="set-jaxb-validation-event-handler" value="false" />
		</jaxws:properties> -->
    

	<jaxws:client id="renewQueryService"
        serviceClass="com.payment.lc.aip.api.RenewPlanService" 
        address="${renewQueryService.url}" />
        
    <jaxws:client id="aipQueryService"
        serviceClass="com.payment.lc.aip.api.AipQueryService" 
        address="${aipQueryService.url}" />
        
   <jaxws:client id="queryTransactionFacade"
        serviceClass="com.payment.lc.fixedincome.trade.facade.query.QueryTransactionFacade" 
        address="${fitrade.queryTransactionFacade.url}" />

    <import resource="classpath:META-INF/spring/spring-${key.source}.xml" />
    
    

</beans>
